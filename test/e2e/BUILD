package(default_visibility = ["//visibility:public"])

load(
    "@io_bazel_rules_go//go:def.bzl",
    "go_library",
    "go_test",
)

go_library(
    name = "go_default_library",
    srcs = [
        "apiserver.go",
        "authn.go",
        "crud.go",
        "e2e.go",
        "event.go",
        "ingress.go",
        "job.go",
        "namespace.go",
        "replicaset.go",
        "service.go",
        "upgrade.go",
        "util.go",
    ],
    importpath = "k8s.io/federation/test/e2e",
    deps = [
        "//apis/federation:go_default_library",
        "//apis/federation/v1beta1:go_default_library",
        "//client/clientset_generated/federation_clientset:go_default_library",
        "//client/clientset_generated/federation_clientset/typed/core/v1:go_default_library",
        "//pkg/federatedtypes:go_default_library",
        "//pkg/federation-controller/util:go_default_library",
        "//test/e2e/framework:go_default_library",
        "//test/e2e/upgrades:go_default_library",
        "//vendor/github.com/golang/glog:go_default_library",
        "//vendor/github.com/onsi/ginkgo:go_default_library",
        "//vendor/github.com/onsi/ginkgo/config:go_default_library",
        "//vendor/github.com/onsi/ginkgo/reporters:go_default_library",
        "//vendor/github.com/onsi/gomega:go_default_library",
        "//vendor/k8s.io/api/batch/v1:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/api/extensions/v1beta1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/api/errors:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/intstr:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/net:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/rand:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/uuid:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/wait:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/storage/names:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/cloudprovider:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/cloudprovider/providers/azure:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/cloudprovider/providers/gce:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/kubectl/util/logs:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/version:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/chaosmonkey:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/common:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/ginkgowrapper:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/framework/metrics:go_default_library",
        "//vendor/k8s.io/kubernetes/test/e2e/manifest:go_default_library",
        "//vendor/k8s.io/kubernetes/test/utils:go_default_library",
        "//vendor/k8s.io/kubernetes/test/utils/image:go_default_library",
    ],
)

# This is a handwritten rule. Do not delete, it will not be regenerated by
# update-bazel.sh.
genrule(
    name = "gen_e2e.test",
    testonly = 1,
    srcs = [":go_default_test"],
    outs = ["e2e.test"],
    cmd = "srcs=($(SRCS)); cp $$(dirname $${srcs[0]})/go_default_test $@;",
    output_to_bindir = 1,
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//test/e2e/framework:all-srcs",
        "//test/e2e/upgrades:all-srcs",
    ],
    tags = ["automanaged"],
)

go_test(
    name = "go_default_test",
    srcs = ["e2e_test.go"],
    importpath = "k8s.io/federation/test/e2e",
    library = ":go_default_library",
    deps = ["//test/e2e/framework:go_default_library"],
)
