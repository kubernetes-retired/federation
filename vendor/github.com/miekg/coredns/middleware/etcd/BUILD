load("@io_bazel_rules_go//go:def.bzl", "go_library")

go_library(
    name = "go_default_library",
    srcs = [
        "debug.go",
        "etcd.go",
        "handler.go",
        "setup.go",
        "stub.go",
        "stub_handler.go",
    ],
    importpath = "github.com/miekg/coredns/middleware/etcd",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/coreos/etcd/client:go_default_library",
        "//vendor/github.com/mholt/caddy:go_default_library",
        "//vendor/github.com/miekg/coredns/core/dnsserver:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/etcd/msg:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/pkg/dnsutil:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/pkg/singleflight:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/proxy:go_default_library",
        "//vendor/github.com/miekg/coredns/request:go_default_library",
        "//vendor/github.com/miekg/dns:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/github.com/miekg/coredns/middleware/etcd/msg:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
