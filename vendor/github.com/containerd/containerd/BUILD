load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "client.go",
        "client_opts.go",
        "container.go",
        "container_opts.go",
        "containerstore.go",
        "export.go",
        "grpc.go",
        "image.go",
        "import.go",
        "io.go",
        "lease.go",
        "process.go",
        "spec.go",
        "spec_opts.go",
        "task.go",
        "task_opts.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "container_opts_unix.go",
            "io_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "container_opts_unix.go",
            "io_unix.go",
            "snapshotter_default_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "container_opts_unix.go",
            "io_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "container_opts_unix.go",
            "io_unix.go",
            "snapshotter_default_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "container_opts_unix.go",
            "io_unix.go",
            "snapshotter_default_linux.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "container_opts_unix.go",
            "io_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "container_opts_unix.go",
            "io_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "container_opts_unix.go",
            "io_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "container_opts_unix.go",
            "io_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "container_opts_unix.go",
            "io_unix.go",
            "snapshotter_default_unix.go",
            "spec_opts_unix.go",
            "spec_unix.go",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "io_windows.go",
            "snapshotter_default_windows.go",
            "spec_opts_windows.go",
            "spec_windows.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/containerd/containerd",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/containerd/containerd/api/services/containers/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/content/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/diff/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/events/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/images/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/introspection/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/leases/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/namespaces/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/snapshot/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/tasks/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/services/version/v1:go_default_library",
        "//vendor/github.com/containerd/containerd/api/types:go_default_library",
        "//vendor/github.com/containerd/containerd/containers:go_default_library",
        "//vendor/github.com/containerd/containerd/content:go_default_library",
        "//vendor/github.com/containerd/containerd/dialer:go_default_library",
        "//vendor/github.com/containerd/containerd/diff:go_default_library",
        "//vendor/github.com/containerd/containerd/errdefs:go_default_library",
        "//vendor/github.com/containerd/containerd/images:go_default_library",
        "//vendor/github.com/containerd/containerd/leases:go_default_library",
        "//vendor/github.com/containerd/containerd/linux/runcopts:go_default_library",
        "//vendor/github.com/containerd/containerd/mount:go_default_library",
        "//vendor/github.com/containerd/containerd/namespaces:go_default_library",
        "//vendor/github.com/containerd/containerd/platforms:go_default_library",
        "//vendor/github.com/containerd/containerd/plugin:go_default_library",
        "//vendor/github.com/containerd/containerd/reference:go_default_library",
        "//vendor/github.com/containerd/containerd/remotes:go_default_library",
        "//vendor/github.com/containerd/containerd/remotes/docker:go_default_library",
        "//vendor/github.com/containerd/containerd/remotes/docker/schema1:go_default_library",
        "//vendor/github.com/containerd/containerd/rootfs:go_default_library",
        "//vendor/github.com/containerd/containerd/services/content:go_default_library",
        "//vendor/github.com/containerd/containerd/services/diff:go_default_library",
        "//vendor/github.com/containerd/containerd/services/images:go_default_library",
        "//vendor/github.com/containerd/containerd/services/namespaces:go_default_library",
        "//vendor/github.com/containerd/containerd/services/snapshot:go_default_library",
        "//vendor/github.com/containerd/containerd/snapshot:go_default_library",
        "//vendor/github.com/containerd/typeurl:go_default_library",
        "//vendor/github.com/gogo/protobuf/types:go_default_library",
        "//vendor/github.com/golang/protobuf/ptypes/empty:go_default_library",
        "//vendor/github.com/opencontainers/go-digest:go_default_library",
        "//vendor/github.com/opencontainers/image-spec/identity:go_default_library",
        "//vendor/github.com/opencontainers/image-spec/specs-go:go_default_library",
        "//vendor/github.com/opencontainers/image-spec/specs-go/v1:go_default_library",
        "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
        "//vendor/google.golang.org/grpc:go_default_library",
        "//vendor/google.golang.org/grpc/health/grpc_health_v1:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/github.com/containerd/containerd/fs:go_default_library",
            "//vendor/github.com/containerd/fifo:go_default_library",
            "//vendor/github.com/gogo/protobuf/proto:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/user:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/github.com/Microsoft/go-winio:go_default_library",
            "//vendor/github.com/containerd/containerd/log:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = [
        "benchmark_test.go",
        "client_test.go",
        "container_test.go",
        "content_test.go",
        "daemon_test.go",
        "export_test.go",
        "image_test.go",
        "import_test.go",
        "snapshot_test.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "container_linux_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "client_unix_test.go",
            "container_checkpoint_test.go",
            "helpers_unix_test.go",
            "spec_unix_test.go",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "client_windows_test.go",
            "helpers_windows_test.go",
        ],
        "//conditions:default": [],
    }),
    embed = [":go_default_library"],
    importpath = "github.com/containerd/containerd",
    deps = [
        "//vendor/github.com/containerd/containerd/containers:go_default_library",
        "//vendor/github.com/containerd/containerd/content:go_default_library",
        "//vendor/github.com/containerd/containerd/content/testsuite:go_default_library",
        "//vendor/github.com/containerd/containerd/errdefs:go_default_library",
        "//vendor/github.com/containerd/containerd/log:go_default_library",
        "//vendor/github.com/containerd/containerd/namespaces:go_default_library",
        "//vendor/github.com/containerd/containerd/runtime:go_default_library",
        "//vendor/github.com/containerd/containerd/snapshot:go_default_library",
        "//vendor/github.com/containerd/containerd/snapshot/testsuite:go_default_library",
        "//vendor/github.com/containerd/containerd/testutil:go_default_library",
        "//vendor/github.com/containerd/containerd/windows/hcsshimtypes:go_default_library",
        "//vendor/github.com/containerd/typeurl:go_default_library",
        "//vendor/github.com/gogo/protobuf/types:go_default_library",
        "//vendor/github.com/pkg/errors:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/google.golang.org/grpc/grpclog:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:android": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:darwin": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:dragonfly": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:freebsd": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:linux": [
            "//vendor/github.com/containerd/cgroups:go_default_library",
            "//vendor/github.com/containerd/containerd/linux/runcopts:go_default_library",
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
            "//vendor/golang.org/x/sys/unix:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:nacl": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:netbsd": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:openbsd": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:plan9": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:solaris": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:windows": [
            "//vendor/github.com/opencontainers/runtime-spec/specs-go:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/github.com/containerd/containerd/api/services/containers/v1:all-srcs",
        "//vendor/github.com/containerd/containerd/api/services/tasks/v1:all-srcs",
        "//vendor/github.com/containerd/containerd/api/services/version/v1:all-srcs",
        "//vendor/github.com/containerd/containerd/api/types:all-srcs",
        "//vendor/github.com/containerd/containerd/containers:all-srcs",
        "//vendor/github.com/containerd/containerd/dialer:all-srcs",
        "//vendor/github.com/containerd/containerd/errdefs:all-srcs",
        "//vendor/github.com/containerd/containerd/namespaces:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
