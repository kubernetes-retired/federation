load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

filegroup(
    name = "go_default_library_protos",
    srcs = ["agent.proto"],
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "agent.go",
        "agent.pb.go",
        "controller.go",
        "default_gateway.go",
        "drivers_ipam.go",
        "endpoint.go",
        "endpoint_cnt.go",
        "endpoint_info.go",
        "endpoint_info_unix.go",
        "error.go",
        "firewall_others.go",
        "network.go",
        "network_unix.go",
        "resolver.go",
        "resolver_unix.go",
        "sandbox.go",
        "sandbox_dns_unix.go",
        "sandbox_externalkey.go",
        "sandbox_store.go",
        "service.go",
        "service_unsupported.go",
        "store.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "default_gateway_linux.go",
            "drivers_experimental_linux.go",
            "drivers_linux.go",
            "firewall_linux.go",
            "sandbox_externalkey_unix.go",
            "service_common.go",
            "service_linux.go",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "default_gateway_windows.go",
            "drivers_windows.go",
            "endpoint_info_windows.go",
            "network_windows.go",
            "resolver_windows.go",
            "sandbox_dns_windows.go",
            "sandbox_externalkey_windows.go",
            "service_common.go",
            "service_windows.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/docker/libnetwork",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/docker/docker/pkg/discovery:go_default_library",
        "//vendor/github.com/docker/docker/pkg/locker:go_default_library",
        "//vendor/github.com/docker/docker/pkg/plugingetter:go_default_library",
        "//vendor/github.com/docker/docker/pkg/plugins:go_default_library",
        "//vendor/github.com/docker/docker/pkg/reexec:go_default_library",
        "//vendor/github.com/docker/docker/pkg/stringid:go_default_library",
        "//vendor/github.com/docker/go-events:go_default_library",
        "//vendor/github.com/docker/libkv/store/boltdb:go_default_library",
        "//vendor/github.com/docker/libkv/store/consul:go_default_library",
        "//vendor/github.com/docker/libkv/store/etcd:go_default_library",
        "//vendor/github.com/docker/libkv/store/zookeeper:go_default_library",
        "//vendor/github.com/docker/libnetwork/cluster:go_default_library",
        "//vendor/github.com/docker/libnetwork/common:go_default_library",
        "//vendor/github.com/docker/libnetwork/config:go_default_library",
        "//vendor/github.com/docker/libnetwork/datastore:go_default_library",
        "//vendor/github.com/docker/libnetwork/discoverapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/driverapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/drvregistry:go_default_library",
        "//vendor/github.com/docker/libnetwork/etchosts:go_default_library",
        "//vendor/github.com/docker/libnetwork/hostdiscovery:go_default_library",
        "//vendor/github.com/docker/libnetwork/ipamapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/ipams/builtin:go_default_library",
        "//vendor/github.com/docker/libnetwork/ipams/null:go_default_library",
        "//vendor/github.com/docker/libnetwork/ipams/remote:go_default_library",
        "//vendor/github.com/docker/libnetwork/iptables:go_default_library",
        "//vendor/github.com/docker/libnetwork/netlabel:go_default_library",
        "//vendor/github.com/docker/libnetwork/netutils:go_default_library",
        "//vendor/github.com/docker/libnetwork/networkdb:go_default_library",
        "//vendor/github.com/docker/libnetwork/options:go_default_library",
        "//vendor/github.com/docker/libnetwork/osl:go_default_library",
        "//vendor/github.com/docker/libnetwork/resolvconf:go_default_library",
        "//vendor/github.com/docker/libnetwork/resolvconf/dns:go_default_library",
        "//vendor/github.com/docker/libnetwork/types:go_default_library",
        "//vendor/github.com/gogo/protobuf/gogoproto:go_default_library",
        "//vendor/github.com/gogo/protobuf/proto:go_default_library",
        "//vendor/github.com/miekg/dns:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/github.com/vishvananda/netns:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "//vendor/github.com/docker/libnetwork/drivers/bridge:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/host:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/ipvlan:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/macvlan:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/null:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/overlay:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/remote:go_default_library",
            "//vendor/github.com/docker/libnetwork/ipvs:go_default_library",
            "//vendor/github.com/docker/libnetwork/ns:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/configs:go_default_library",
            "//vendor/github.com/vishvananda/netlink/nl:go_default_library",
        ],
        "@io_bazel_rules_go//go/platform:windows_amd64": [
            "//vendor/github.com/Microsoft/hcsshim:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/null:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/remote:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/windows:go_default_library",
            "//vendor/github.com/docker/libnetwork/drivers/windows/overlay:go_default_library",
            "//vendor/github.com/docker/libnetwork/ipams/windowsipam:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

go_test(
    name = "go_default_test",
    srcs = [
        "errors_test.go",
        "libnetwork_internal_test.go",
        "sandbox_test.go",
        "store_test.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "store_linux_test.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/docker/libnetwork",
    library = ":go_default_library",
    deps = [
        "//vendor/github.com/docker/libkv/store:go_default_library",
        "//vendor/github.com/docker/libnetwork/common:go_default_library",
        "//vendor/github.com/docker/libnetwork/config:go_default_library",
        "//vendor/github.com/docker/libnetwork/datastore:go_default_library",
        "//vendor/github.com/docker/libnetwork/discoverapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/driverapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/ipamapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/netlabel:go_default_library",
        "//vendor/github.com/docker/libnetwork/netutils:go_default_library",
        "//vendor/github.com/docker/libnetwork/options:go_default_library",
        "//vendor/github.com/docker/libnetwork/osl:go_default_library",
        "//vendor/github.com/docker/libnetwork/testutils:go_default_library",
        "//vendor/github.com/docker/libnetwork/types:go_default_library",
    ],
)

go_test(
    name = "go_default_xtest",
    srcs = [
        "libnetwork_test.go",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "libnetwork_linux_test.go",
        ],
        "//conditions:default": [],
    }),
    importpath = "github.com/docker/libnetwork_test",
    deps = [
        ":go_default_library",
        "//vendor/github.com/docker/docker/pkg/plugins:go_default_library",
        "//vendor/github.com/docker/docker/pkg/reexec:go_default_library",
        "//vendor/github.com/docker/libnetwork/config:go_default_library",
        "//vendor/github.com/docker/libnetwork/datastore:go_default_library",
        "//vendor/github.com/docker/libnetwork/driverapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/ipamapi:go_default_library",
        "//vendor/github.com/docker/libnetwork/netlabel:go_default_library",
        "//vendor/github.com/docker/libnetwork/options:go_default_library",
        "//vendor/github.com/docker/libnetwork/testutils:go_default_library",
        "//vendor/github.com/docker/libnetwork/types:go_default_library",
        "//vendor/github.com/sirupsen/logrus:go_default_library",
        "//vendor/github.com/vishvananda/netns:go_default_library",
    ] + select({
        "@io_bazel_rules_go//go/platform:linux_amd64": [
            "//vendor/github.com/docker/libnetwork/osl:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer:go_default_library",
            "//vendor/github.com/opencontainers/runc/libcontainer/configs:go_default_library",
            "//vendor/github.com/vishvananda/netlink:go_default_library",
        ],
        "//conditions:default": [],
    }),
)

filegroup(
    name = "package-srcs",
    srcs = glob(["**"]),
    tags = ["automanaged"],
    visibility = ["//visibility:private"],
)

filegroup(
    name = "all-srcs",
    srcs = [
        ":package-srcs",
        "//vendor/github.com/docker/libnetwork/ipvs:all-srcs",
    ],
    tags = ["automanaged"],
    visibility = ["//visibility:public"],
)
